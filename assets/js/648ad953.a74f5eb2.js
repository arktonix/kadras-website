"use strict";(self.webpackChunkkadras_docs=self.webpackChunkkadras_docs||[]).push([[185],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>g});var r=a(7294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,o=function(e,t){if(null==e)return{};var a,r,o={},n=Object.keys(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var p=r.createContext({}),c=function(e){var t=r.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},s=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},k=r.forwardRef((function(e,t){var a=e.components,o=e.mdxType,n=e.originalType,p=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),d=c(a),k=o,g=d["".concat(p,".").concat(k)]||d[k]||u[k]||n;return a?r.createElement(g,l(l({ref:t},s),{},{components:a})):r.createElement(g,l({ref:t},s))}));function g(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var n=a.length,l=new Array(n);l[0]=k;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[d]="string"==typeof e?e:o,l[1]=i;for(var c=2;c<n;c++)l[c]=a[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}k.displayName="MDXCreateElement"},1085:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>d,frontMatter:()=>n,metadata:()=>i,toc:()=>c});var r=a(7462),o=(a(7294),a(3905));const n={sidebar_position:2,description:"Create and view an application workload"},l="Create a Workload",i={unversionedId:"getting-started/workload",id:"getting-started/workload",title:"Create a Workload",description:"Create and view an application workload",source:"@site/docs/getting-started/workload.md",sourceDirName:"getting-started",slug:"/getting-started/workload",permalink:"/kadras-docs/docs/getting-started/workload",draft:!1,editUrl:"https://github.com/kadras-io/kadras-docs/tree/main/docs/docs/getting-started/workload.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,description:"Create and view an application workload"},sidebar:"tutorialSidebar",previous:{title:"Installation",permalink:"/kadras-docs/docs/getting-started/installation"}},p={},c=[{value:"Deploy a workload",id:"deploy-a-workload",level:2},{value:"View a workload",id:"view-a-workload",level:2}],s={toc:c};function d(e){let{components:t,...a}=e;return(0,o.kt)("wrapper",(0,r.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"create-a-workload"},"Create a Workload"),(0,o.kt)("p",null,"Kadras Engineering Platform provides out-of-the-box capabilities to support application development workflows from source code to URL."),(0,o.kt)("p",null,"First, check out the sample Band Service application."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"git clone https://github.com/thomasvitale/band-service\n")),(0,o.kt)("h2",{id:"deploy-a-workload"},"Deploy a workload"),(0,o.kt)("p",null,"The platform exposes a Workload API based on ",(0,o.kt)("a",{parentName:"p",href:"https://cartographer.sh"},"Cartographer")," that developers use to trigger the supply chain for a given application."),(0,o.kt)("p",null,"Deploy the Band Service application by creating a workload based on the configuration available in ",(0,o.kt)("inlineCode",{parentName:"p"},"config/workload.yml"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"carto apps workload create --file config/workload.yml\n")),(0,o.kt)("p",null,"Alternatively, you can create a workload using the Kubernetes CLI."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl apply -f config/workload.yml\n")),(0,o.kt)("p",null,"The platform will check out the application source code and run it through a pre-configured supply chain that will package it as a container image, configure it and finally deploy it."),(0,o.kt)("h2",{id:"view-a-workload"},"View a workload"),(0,o.kt)("p",null,"Using the Cartographer CLI, you can inspect the status of a workload and its supply chain."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"carto apps workload get band-service\n")),(0,o.kt)("p",null,"The application will be available at ",(0,o.kt)("inlineCode",{parentName:"p"},"https://band-service.default.127.0.0.1.sslip.io"),"."))}d.isMDXComponent=!0}}]);